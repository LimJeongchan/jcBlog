---
layout: post
title:  "04장 웹 프레젠테이션 패턴"
date:   2021-12-21 00:58:03 +0900
categories: jekyll update
---

학습목표 : 웹 프레젠테이션 계층에서 고려해야될 패턴에 대해 알아보자.
---
#### **웹 프레젠테이션 패턴**
1. 웹 브라우저 기반 사용자 인터페이스는 클라이언트 소프트웨어를 설치할 필요가 없고, 공통적인 UI를 제공하며, 사용하기 쉬운 범용적 접근을 제공하며, 다양한 환경에서 손쉽게 앱을 구축할 수 있는 장점이 있다.
2. 웹 앱을 준비하는 작업은 서버 소프트웨어를 구상하는 것부터 시작 웹서버의 역활은 요청을 받으면 URL을 해석하고 웹 서버 프로그램으로 제어권을 넘겨주는 것이다.
3. 웹서버 프로그램을 구성하는 방식에는 두 가지 주요 형식이 있다.
	- 스크립트  : CGI 스크립트, 자바 서블릿
	- 서버 페이지 : JSP, ASP, PHP
4. 모델 뷰 컨트롤러
	- 모델 뷰 컨트롤러는 잘못 이해되는 경우가 많다. 컨트롤러 용어를 입력 컨트롤러라 생각하면 이해하기 쉽다.
	- 모델 뷰 컨트롤러를 적용하는 가장 중요한 이유는 모델을 웹 프레젠테이션으로 부터 완전이 분리하기 위해서 이다. (프레젠테이션 수정이 쉽다, 다른 프레젠테이션 추가 용이, 테스트 수월)
- ![모델 뷰 컨트롤러]({{site.url}}/{{site.baseurl}}/img/KakaoTalk_20211220_235406822_02.jpg )

#### **뷰 패턴**
1. 템플릿 뷰 or 변환 뷰
	- 템플릿 뷰
		- 템플릿 뷰를 사용하면 페이지 구조안에 프레젠테이션을 작성하고 페이지에 표식을 삽입해 동적 콘텐츠를 넣을 위치를 지정할 수 있다.( JSP, ASP, PHP)
		- 강력하고 유연하지만 관리하기 어려운 복잡한 코트로 이어질 가능성이 높다.
	- 변환 뷰
		- 변환 스타일의 프로그램을 사용(ex : XSLT)
		- 이 패턴은 사용할 도메인 데이터가 xml형식 이거나 xml형식으로 쉽게 변환할 수 있을때 효과적 이다.
2. 1단계 뷰 or 2단계 뷰
	- 1단계 뷰 : 애플리케이션 화면당 뷰 컴포넌트 하나를 사용
- ![1단계 뷰]({{site.url}}/{{site.baseurl}}/img/KakaoTalk_20211221_000604368.jpg )
	- 2단계 뷰 : 도메인 논리로부터  논리적 화면을 생성한 다음 이를 HTML 랜더링하는 두단계로 나눈것, 전체 애플리케이션에 하나만 있다.
- ![2단계 뷰]({{site.url}}/{{site.baseurl}}/img/KakaoTalk_20211221_000604368_01.jpg )

#### **입력 콘트롤러 패턴**
1. 컨트롤러가 뷰와 입력 컨트롤러의 역할을 결합한 서버 페이지 하나인 경우로 페이지마다 컨트롤러를 만든다.
2. 하나의 컨트롤러로 모든 HTTP 요청을 처리한다. 프런트 컨트롤러는 URL를 분석해 요청을 파악하고 별도의 객체를 생성한다.